# Generated by Django 5.2.6 on 2025-09-30 21:39

import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="FlashcardSet",
            fields=[
                ("title", models.CharField(max_length=200)),
                ("description", models.TextField(blank=True, max_length=300)),
                (
                    "subject",
                    models.CharField(
                        blank=True, default="General", max_length=100, null=True
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "duration",
                    models.IntegerField(
                        blank=True,
                        default=30,
                        help_text="Duration in minutes",
                        null=True,
                    ),
                ),
                ("is_public", models.BooleanField(default=True)),
                ("difficulty", models.CharField(blank=True, max_length=50, null=True)),
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "owner",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="Flashcard",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("front", models.TextField(max_length=1000)),
                ("back", models.TextField(max_length=1000)),
                (
                    "flashcard_set",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="flashcards",
                        to="myapp.flashcardset",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="FlashcardSetProgress",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("current_index", models.IntegerField(default=0)),
                ("known", models.IntegerField(default=0)),
                ("not_known", models.IntegerField(default=0)),
                ("completed", models.BooleanField(default=False)),
                (
                    "flashcard_set",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="myapp.flashcardset",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="PracticeTest",
            fields=[
                ("title", models.CharField(max_length=200)),
                ("description", models.TextField(blank=True, max_length=300)),
                (
                    "subject",
                    models.CharField(
                        blank=True, default="General", max_length=100, null=True
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "duration",
                    models.IntegerField(
                        blank=True,
                        default=30,
                        help_text="Duration in minutes",
                        null=True,
                    ),
                ),
                ("is_public", models.BooleanField(default=True)),
                ("difficulty", models.CharField(blank=True, max_length=50, null=True)),
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "owner",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="PracticeTestResult",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("score", models.FloatField()),
                ("taken_at", models.DateTimeField(auto_now_add=True)),
                (
                    "practice_test",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="myapp.practicetest",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="Question",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("text", models.TextField()),
                (
                    "question_type",
                    models.CharField(
                        choices=[
                            ("mcq", "Multiple Choice"),
                            ("text", "Short Answer"),
                            ("tf", "True/False"),
                        ],
                        default="mcq",
                        max_length=10,
                    ),
                ),
                (
                    "subject",
                    models.CharField(
                        blank=True, default="General", max_length=100, null=True
                    ),
                ),
                ("answer", models.CharField(blank=True, max_length=200, null=True)),
                (
                    "explanation",
                    models.TextField(blank=True, max_length=5000, null=True),
                ),
                (
                    "practice_test",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="questions",
                        to="myapp.practicetest",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Option",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("text", models.CharField(max_length=200)),
                ("is_correct", models.BooleanField(default=False)),
                (
                    "question",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="options",
                        to="myapp.question",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="WritingTask",
            fields=[
                ("title", models.CharField(max_length=200)),
                ("description", models.TextField(blank=True, max_length=300)),
                (
                    "subject",
                    models.CharField(
                        blank=True, default="General", max_length=100, null=True
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "duration",
                    models.IntegerField(
                        blank=True,
                        default=30,
                        help_text="Duration in minutes",
                        null=True,
                    ),
                ),
                ("is_public", models.BooleanField(default=True)),
                ("difficulty", models.CharField(blank=True, max_length=50, null=True)),
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("prompt", models.TextField(max_length=5000)),
                (
                    "grading_level",
                    models.CharField(blank=True, max_length=50, null=True),
                ),
                (
                    "min_word_count",
                    models.IntegerField(blank=True, default=250, null=True),
                ),
                (
                    "max_word_count",
                    models.IntegerField(blank=True, default=1000, null=True),
                ),
                (
                    "owner",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="WritingTaskResult",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("score", models.FloatField()),
                ("taken_at", models.DateTimeField(auto_now_add=True)),
                ("content", models.TextField(blank=True, max_length=10000, null=True)),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "writing_task",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="myapp.writingtask",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
    ]
